name: React Kiosk Deployment

on:
  pull_request:
    branches:
      - main
  push: # push 이벤트도 추가
    branches:
      - main

jobs:
  build:
    name: react build & deploy
    runs-on: ubuntu-latest

    steps:
      - name: checkout Github Action
        uses: actions/checkout@v4

      #캐시
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install npm dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo "VITE_SERVER_ADDRESS=${{ secrets.VITE_SERVER_ADDRESS }}" >> .env

      - name: react build
        run: npm run build

      # S3 업로드용 AWS 설정 (한국 리전)
      - name: Configure AWS credentials for S3
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northeast-2

      # S3에 build 파일 업로드
      - name: Upload to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        run: |
          aws s3 sync \
            ./dist s3://$BUCKET_NAME/kiosk \
            --delete  # 기존 파일 삭제 옵션 추가

      # CloudFront 무효화용 AWS 설정
      - name: Configure AWS credentials for CloudFront
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # CloudFront 무효화
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
